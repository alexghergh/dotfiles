# -- Configuration ------------------------------------------------------------


# set terminal true colors in tmux (refer to this issue https://github.com/tmux/tmux/issues/1246)
set -g default-terminal "tmux-256color"
set -as terminal-overrides ",*256col*:Tc"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm' # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underline colours

set -s extended-keys on                             # allow CSI extended keys (currently konsole doesn't support it, so maybe in the future; still, i will leave this here for future-proofness, also see https://github.com/tmux/tmux/wiki/Modifier-Keys#extended-keys)


set -g base-index 1                                 # start windows numbering at 1
setw -g pane-base-index 1                           # make pane numbering consistent with windows

setw -g automatic-rename on                         # rename window to reflect current program
set -g renumber-windows on                          # renumber windows when a window is closed

set -g set-titles on                                # correctly update ssh hosts when connecting to a server
set -g set-titles-string "#T"

# set -g mouse off                                    # mouse support off

set -s escape-time 0                                # address vim mode switching delay (http://superuser.com/a/252717/65504)

set -g history-limit 10000                          # increase scrollback buffer size

set -g status-interval 1                            # refresh status bar more often

set -g status-keys emacs                            # emacs keys in command prompt are better even for vim users

set -g focus-events on

set -g aggressive-resize on                         # super useful when using "grouped sessions" and multi-monitor setup

set -g mode-keys vi                                 # use vim keys in copy mode

set -g display-time 3000                            # hold messages on screen for 3 seconds

set -g alternate-screen on


# integrate tmux paste buffers with system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -i -selection clipboard"    # make tmux copy into the system clipboard and set y to yank
bind p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"         # bind p to paste buffer, getting content from system clipboard
bind -T copy-mode-vi v send-keys -X begin-selection # rebind v to begin selection


# rebind the prefix key
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# bind prefix + r to source tmux.conf
bind r source-file "~/.config/tmux/tmux.conf" \; display "~/.config/tmux/tmux.conf sourced!"

# easier switch between windows (you can hold Ctrl now when using prefix instead of letting go, which is faster)
bind C-p previous-window
bind C-n next-window
bind C-l last-window


# rebind the split window keys to match vim (they are reversed on purpose since tmux doesn't understand what verticality means)
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"


# smart pane switching with awareness of vim splits using Alt+hjkl and prefix+semicolon
# due to the fact that the ; and C-; codes are the same in the terminal, Ctrl can be held while switching to last pane
# also, when vim is present, we send the mapping for the vim-tmux-navigator function in vim, mapped to <Leader>lp (lp stands for last pane)
# remember to change the key here if the leader changes in vim
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n M-h if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind -n M-j if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind -n M-k if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind -n M-l if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'
bind \; if-shell "$is_vim" 'send-keys Space lp' 'select-pane -l'

# bindings for quick access to useful panes
bind C-h new-window "htop"
bind C-t new-window "cd ~/.config/tmux/ && vim tmux.conf"
bind C-v new-window "cd ~/.config/nvim/ && vim init.lua"
bind C-w new-window "cd ~/.config/wezterm/ && vim wezterm.lua"
bind C-f new-window "cd ~/.config/fish/ && vim config.fish"
bind C-k new-window "cd ~/.config/nvim/lua/core && vim keymaps.lua"



# -- Design -------------------------------------------------------------------

# tmux colorscheme to use
# options: sea (default), mad-max, wakanda, space
set -g @colorscheme 'space'
run '~/.config/tmux/colorscheme/tmux-colorscheme-chooser/colorscheme-chooser.tmux'



# -- Plugins ------------------------------------------------------------------

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# tmux-continuum
set -g @continuum-boot 'on'                         # automatically start tmux server on start
set -g @continuum-restore 'on'                      # automatically restore environment on server start
set -g @continuum-save-interval '60'                # save environment every 60 minutes

# save files are kept in ~/.config/tmux/resurrect
# individual save files can be brought back (see https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/faq.md)

set -g @resurrect-capture-pane-contents 'on'        # restore exact pane contents

# change default tmux-resurrect path
set -g @resurrect-dir '~/.config/tmux/resurrect'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
